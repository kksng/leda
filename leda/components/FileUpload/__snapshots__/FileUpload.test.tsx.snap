// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FileUpload SNAPSHOTS should render 1`] = `
<FileUpload
  onFileLoad={[MockFunction]}
>
  <Wrapper
    aria-invalid={false}
    onClick={[Function]}
  >
    <A
      aria-invalid={false}
      onClick={[Function]}
    >
      <a
        aria-invalid={false}
        onClick={[Function]}
      >
        <Info>
          <Span>
            <span>
              Загрузить
            </span>
          </Span>
        </Info>
        <Div
          onBlur={[Function]}
          onClick={[Function]}
          onDragEnter={[Function]}
          onDragLeave={[Function]}
          onDragOver={[Function]}
          onDrop={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          tabIndex={0}
        >
          <div
            onBlur={[Function]}
            onClick={[Function]}
            onDragEnter={[Function]}
            onDragLeave={[Function]}
            onDragOver={[Function]}
            onDrop={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            tabIndex={0}
          >
            <input
              autoComplete="off"
              multiple={false}
              onChange={[Function]}
              onClick={[Function]}
              style={
                Object {
                  "display": "none",
                }
              }
              tabIndex={-1}
              type="file"
            />
          </div>
        </Div>
      </a>
    </A>
  </Wrapper>
  <InvalidMessageWrapper>
    <InvalidMessage
      isValid={true}
      messages={Array []}
    >
      <Component
        isValid={true}
        messages={Array []}
      />
    </InvalidMessage>
  </InvalidMessageWrapper>
</FileUpload>
`;

exports[`FileUpload SNAPSHOTS should render different component states should render isLoading 1`] = `
<FileUpload
  infoRender={[Function]}
  isLoading={true}
  onFileLoad={[MockFunction]}
>
  <Wrapper
    aria-invalid={false}
    onClick={[Function]}
  >
    <A
      aria-invalid={false}
      onClick={[Function]}
    >
      <a
        aria-invalid={false}
        onClick={[Function]}
      >
        <Info>
          WAIT FOR ETERNITY
        </Info>
        <Div
          onBlur={[Function]}
          onClick={[Function]}
          onDragEnter={[Function]}
          onDragLeave={[Function]}
          onDragOver={[Function]}
          onDrop={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          tabIndex={0}
        >
          <div
            onBlur={[Function]}
            onClick={[Function]}
            onDragEnter={[Function]}
            onDragLeave={[Function]}
            onDragOver={[Function]}
            onDrop={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            tabIndex={0}
          >
            <input
              autoComplete="off"
              multiple={false}
              onChange={[Function]}
              onClick={[Function]}
              style={
                Object {
                  "display": "none",
                }
              }
              tabIndex={-1}
              type="file"
            />
          </div>
        </Div>
      </a>
    </A>
  </Wrapper>
  <InvalidMessageWrapper>
    <InvalidMessage
      isValid={true}
      messages={Array []}
    >
      <Component
        isValid={true}
        messages={Array []}
      />
    </InvalidMessage>
  </InvalidMessageWrapper>
</FileUpload>
`;
