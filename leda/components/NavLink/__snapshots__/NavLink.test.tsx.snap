// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NavLink ATTRIBUTES should accept _blank target prop 1`] = `
<MemoryRouter
  initialEntries={
    Array [
      "/",
    ]
  }
>
  <Router
    history=""
  >
    <NavLink
      href="/test"
      target="_blank"
    >
      <Route
        location=""
        path="\\\\/test"
      >
        <Li
          _dropdown={false}
          _level-1={true}
        >
          <li
            className="level-1"
          >
            <NavLink
              target="_blank"
              to="/test"
            >
              <Link
                aria-current={null}
                target="_blank"
                to={
                  Object {
                    "hash": "",
                    "pathname": "/test",
                    "search": "",
                    "state": null,
                  }
                }
              >
                <LinkAnchor
                  aria-current={null}
                  href="/test"
                  navigate={[Function]}
                  target="_blank"
                >
                  <a
                    aria-current={null}
                    href="/test"
                    onClick={[Function]}
                    target="_blank"
                  >
                    test link
                     
                    <Icon />
                  </a>
                </LinkAnchor>
              </Link>
            </NavLink>
            <DropDown />
          </li>
        </Li>
      </Route>
    </NavLink>
  </Router>
</MemoryRouter>
`;

exports[`NavLink ATTRIBUTES should accept _self target prop 1`] = `
<MemoryRouter
  initialEntries={
    Array [
      "/",
    ]
  }
>
  <Router
    history=""
  >
    <NavLink
      href="/test"
      target="_self"
    >
      <Route
        location=""
        path="\\\\/test"
      >
        <Li
          _dropdown={false}
          _level-1={true}
        >
          <li
            className="level-1"
          >
            <NavLink
              target="_self"
              to="/test"
            >
              <Link
                aria-current={null}
                target="_self"
                to={
                  Object {
                    "hash": "",
                    "pathname": "/test",
                    "search": "",
                    "state": null,
                  }
                }
              >
                <LinkAnchor
                  aria-current={null}
                  href="/test"
                  navigate={[Function]}
                  target="_self"
                >
                  <a
                    aria-current={null}
                    href="/test"
                    onClick={[Function]}
                    target="_self"
                  >
                    test link
                     
                    <Icon />
                  </a>
                </LinkAnchor>
              </Link>
            </NavLink>
            <DropDown />
          </li>
        </Li>
      </Route>
    </NavLink>
  </Router>
</MemoryRouter>
`;

exports[`NavLink ATTRIBUTES should accept isActive function 1`] = `
<MemoryRouter
  initialEntries={
    Array [
      "/",
    ]
  }
>
  <Router
    history=""
  >
    <NavLink
      href="/test"
      isActive={
        [MockFunction] {
          "calls": Array [
            Array [
              Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": "",
              },
              null,
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        }
      }
    >
      <Route
        location=""
        path="\\\\/test"
      >
        <Li
          _dropdown={false}
          _level-1={true}
        >
          <li
            className="level-1"
          >
            <NavLink
              to="/test"
            >
              <Link
                aria-current={null}
                to={
                  Object {
                    "hash": "",
                    "pathname": "/test",
                    "search": "",
                    "state": null,
                  }
                }
              >
                <LinkAnchor
                  aria-current={null}
                  href="/test"
                  navigate={[Function]}
                >
                  <a
                    aria-current={null}
                    href="/test"
                    onClick={[Function]}
                  >
                    test link
                     
                    <Icon />
                  </a>
                </LinkAnchor>
              </Link>
            </NavLink>
            <DropDown />
          </li>
        </Li>
      </Route>
    </NavLink>
  </Router>
</MemoryRouter>
`;

exports[`NavLink ATTRIBUTES should be hidden 1`] = `
<MemoryRouter
  initialEntries={
    Array [
      "/",
    ]
  }
>
  <Router
    history=""
  >
    <NavLink
      href="/test"
      isHidden={true}
    />
  </Router>
</MemoryRouter>
`;

exports[`NavLink ATTRIBUTES should compare location 1`] = `
<MemoryRouter
  initialEntries={
    Array [
      "/",
    ]
  }
>
  <Router
    history=""
  >
    <NavLink
      href="/test"
      location=""
    >
      <Route
        location=""
        path="\\\\/test"
      >
        <Li
          _dropdown={false}
          _level-1={true}
        >
          <li
            className="level-1"
          >
            <NavLink
              to="/test"
            >
              <Link
                aria-current={null}
                to={
                  Object {
                    "hash": "",
                    "pathname": "/test",
                    "search": "",
                    "state": null,
                  }
                }
              >
                <LinkAnchor
                  aria-current={null}
                  href="/test"
                  navigate={[Function]}
                >
                  <a
                    aria-current={null}
                    href="/test"
                    onClick={[Function]}
                  >
                    test link
                     
                    <Icon />
                  </a>
                </LinkAnchor>
              </Link>
            </NavLink>
            <DropDown />
          </li>
        </Li>
      </Route>
    </NavLink>
  </Router>
</MemoryRouter>
`;

exports[`NavLink ATTRIBUTES should have "href" in isExternal rout  1`] = `
<MemoryRouter
  initialEntries={
    Array [
      "/",
    ]
  }
>
  <Router
    history=""
  >
    <NavLink
      href="https://google.com"
      isExternal={true}
    >
      <Route
        location=""
        path="https\\\\:\\\\/\\\\/google\\\\.com"
      >
        <Li
          _dropdown={false}
          _level-1={true}
        >
          <li
            className="level-1"
          >
            <A
              href="https://google.com"
              target="_blank"
            >
              <a
                href="https://google.com"
                onClick={[Function]}
                target="_blank"
              >
                test link
              </a>
            </A>
            <DropDown />
          </li>
        </Li>
      </Route>
    </NavLink>
  </Router>
</MemoryRouter>
`;

exports[`NavLink ATTRIBUTES should have "href" route 1`] = `
<MemoryRouter
  initialEntries={
    Array [
      "/",
    ]
  }
>
  <Router
    history=""
  >
    <NavLink
      href="/test"
    >
      <Route
        location=""
        path="\\\\/test"
      >
        <Li
          _dropdown={false}
          _level-1={true}
        >
          <li
            className="level-1"
          >
            <NavLink
              to="/test"
            >
              <Link
                aria-current={null}
                to={
                  Object {
                    "hash": "",
                    "pathname": "/test",
                    "search": "",
                    "state": null,
                  }
                }
              >
                <LinkAnchor
                  aria-current={null}
                  href="/test"
                  navigate={[Function]}
                >
                  <a
                    aria-current={null}
                    href="/test"
                    onClick={[Function]}
                  >
                    test link
                     
                    <Icon />
                  </a>
                </LinkAnchor>
              </Link>
            </NavLink>
            <DropDown />
          </li>
        </Li>
      </Route>
    </NavLink>
  </Router>
</MemoryRouter>
`;

exports[`NavLink ATTRIBUTES should have children prop 1`] = `
<MemoryRouter
  initialEntries={
    Array [
      "/",
    ]
  }
>
  <Router
    history=""
  >
    <NavLink
      href="/test"
    >
      <Route
        location=""
        path="\\\\/test"
      >
        <Li
          _dropdown={false}
          _level-1={true}
        >
          <li
            className="level-1"
          >
            <NavLink
              to="/test"
            >
              <Link
                aria-current={null}
                to={
                  Object {
                    "hash": "",
                    "pathname": "/test",
                    "search": "",
                    "state": null,
                  }
                }
              >
                <LinkAnchor
                  aria-current={null}
                  href="/test"
                  navigate={[Function]}
                >
                  <a
                    aria-current={null}
                    href="/test"
                    onClick={[Function]}
                  >
                    test link
                     
                    <Icon />
                  </a>
                </LinkAnchor>
              </Link>
            </NavLink>
            <DropDown />
          </li>
        </Li>
      </Route>
    </NavLink>
  </Router>
</MemoryRouter>
`;

exports[`NavLink ATTRIBUTES should have className, change classes through props and className should not change prop-classes should change classes through props 1`] = `
<MemoryRouter
  initialEntries={
    Array [
      "/",
    ]
  }
>
  <Router
    history=""
  >
    <NavLink
      _inner={true}
      href="/test"
      isStrict={true}
    >
      <Route
        location=""
        path="\\\\/test"
        strict={true}
      >
        <Li
          _dropdown={false}
          _level-1={true}
          className="inner"
        >
          <li
            className="level-1 inner"
          >
            <NavLink
              to="/test"
            >
              <Link
                aria-current={null}
                to={
                  Object {
                    "hash": "",
                    "pathname": "/test",
                    "search": "",
                    "state": null,
                  }
                }
              >
                <LinkAnchor
                  aria-current={null}
                  href="/test"
                  navigate={[Function]}
                >
                  <a
                    aria-current={null}
                    href="/test"
                    onClick={[Function]}
                  >
                    test link
                     
                    <Icon />
                  </a>
                </LinkAnchor>
              </Link>
            </NavLink>
            <DropDown />
          </li>
        </Li>
      </Route>
    </NavLink>
  </Router>
</MemoryRouter>
`;

exports[`NavLink ATTRIBUTES should have className, change classes through props and className should not change prop-classes should have className 1`] = `
<MemoryRouter
  initialEntries={
    Array [
      "/",
    ]
  }
>
  <Router
    history=""
  >
    <NavLink
      _box={true}
      href="/test"
      isStrict={true}
    >
      <Route
        location=""
        path="\\\\/test"
        strict={true}
      >
        <Li
          _dropdown={false}
          _level-1={true}
          className="box"
        >
          <li
            className="level-1 box"
          >
            <NavLink
              to="/test"
            >
              <Link
                aria-current={null}
                to={
                  Object {
                    "hash": "",
                    "pathname": "/test",
                    "search": "",
                    "state": null,
                  }
                }
              >
                <LinkAnchor
                  aria-current={null}
                  href="/test"
                  navigate={[Function]}
                >
                  <a
                    aria-current={null}
                    href="/test"
                    onClick={[Function]}
                  >
                    test link
                     
                    <Icon />
                  </a>
                </LinkAnchor>
              </Link>
            </NavLink>
            <DropDown />
          </li>
        </Li>
      </Route>
    </NavLink>
  </Router>
</MemoryRouter>
`;

exports[`NavLink ATTRIBUTES should have className, change classes through props and className should not change prop-classes should not allow className to change prop-classes 1`] = `
<MemoryRouter
  initialEntries={
    Array [
      "/",
    ]
  }
>
  <Router
    history=""
  >
    <NavLink
      _inner={true}
      className="testClass"
      href="/test"
      isStrict={true}
    >
      <Route
        location=""
        path="\\\\/test"
        strict={true}
      >
        <Li
          _dropdown={false}
          _level-1={true}
          className="inner testClass"
        >
          <li
            className="level-1 inner testClass"
          >
            <NavLink
              to="/test"
            >
              <Link
                aria-current={null}
                to={
                  Object {
                    "hash": "",
                    "pathname": "/test",
                    "search": "",
                    "state": null,
                  }
                }
              >
                <LinkAnchor
                  aria-current={null}
                  href="/test"
                  navigate={[Function]}
                >
                  <a
                    aria-current={null}
                    href="/test"
                    onClick={[Function]}
                  >
                    test link
                     
                    <Icon />
                  </a>
                </LinkAnchor>
              </Link>
            </NavLink>
            <DropDown />
          </li>
        </Li>
      </Route>
    </NavLink>
  </Router>
</MemoryRouter>
`;

exports[`NavLink ATTRIBUTES should have isExact route 1`] = `
<MemoryRouter
  initialEntries={
    Array [
      "/",
    ]
  }
>
  <Router
    history=""
  >
    <NavLink
      href="/test"
      isExact={true}
    >
      <Route
        exact={true}
        location=""
        path="\\\\/test"
      >
        <Li
          _dropdown={false}
          _level-1={true}
        >
          <li
            className="level-1"
          >
            <NavLink
              to="/test"
            >
              <Link
                aria-current={null}
                to={
                  Object {
                    "hash": "",
                    "pathname": "/test",
                    "search": "",
                    "state": null,
                  }
                }
              >
                <LinkAnchor
                  aria-current={null}
                  href="/test"
                  navigate={[Function]}
                >
                  <a
                    aria-current={null}
                    href="/test"
                    onClick={[Function]}
                  >
                    test link
                     
                    <Icon />
                  </a>
                </LinkAnchor>
              </Link>
            </NavLink>
            <DropDown />
          </li>
        </Li>
      </Route>
    </NavLink>
  </Router>
</MemoryRouter>
`;

exports[`NavLink ATTRIBUTES should render dropDownListTemplate 1`] = `
<MemoryRouter
  initialEntries={
    Array [
      "/",
    ]
  }
>
  <Router
    history=""
  >
    <NavLink
      dropDownRender={[Function]}
      href="/test"
    >
      <Route
        location=""
        path="\\\\/test"
      >
        <Li
          _dropdown={true}
          _level-1={true}
        >
          <li
            className="level-1 dropdown"
          >
            <NavLink
              to="/test"
            >
              <Link
                aria-current={null}
                to={
                  Object {
                    "hash": "",
                    "pathname": "/test",
                    "search": "",
                    "state": null,
                  }
                }
              >
                <LinkAnchor
                  aria-current={null}
                  href="/test"
                  navigate={[Function]}
                >
                  <a
                    aria-current={null}
                    href="/test"
                    onClick={[Function]}
                  >
                    test link
                     
                    <Icon />
                  </a>
                </LinkAnchor>
              </Link>
            </NavLink>
            <DropDown>
              <div
                className="test"
              >
                LIST
              </div>
            </DropDown>
          </li>
        </Li>
      </Route>
    </NavLink>
  </Router>
</MemoryRouter>
`;

exports[`NavLink ATTRIBUTES should render icon 1`] = `
<MemoryRouter
  initialEntries={
    Array [
      "/",
    ]
  }
>
  <Router
    history=""
  >
    <NavLink
      href="/test"
      iconRender={[Function]}
    >
      <Route
        location=""
        path="\\\\/test"
      >
        <Li
          _dropdown={false}
          _level-1={true}
        >
          <li
            className="level-1"
          >
            <NavLink
              to="/test"
            >
              <Link
                aria-current={null}
                to={
                  Object {
                    "hash": "",
                    "pathname": "/test",
                    "search": "",
                    "state": null,
                  }
                }
              >
                <LinkAnchor
                  aria-current={null}
                  href="/test"
                  navigate={[Function]}
                >
                  <a
                    aria-current={null}
                    href="/test"
                    onClick={[Function]}
                  >
                    test link
                     
                    <Icon>
                      <Span
                        _count={true}
                      >
                        <span
                          className="count"
                        >
                          20
                        </span>
                      </Span>
                    </Icon>
                  </a>
                </LinkAnchor>
              </Link>
            </NavLink>
            <DropDown />
          </li>
        </Li>
      </Route>
    </NavLink>
  </Router>
</MemoryRouter>
`;

exports[`NavLink ATTRIBUTES should render react link if isExternal is true 1`] = `
<MemoryRouter
  initialEntries={
    Array [
      "/",
    ]
  }
>
  <Router
    history=""
  >
    <NavLink
      href="https://google.com"
      isExternal={true}
    >
      <Route
        location=""
        path="https\\\\:\\\\/\\\\/google\\\\.com"
      >
        <Li
          _dropdown={false}
          _level-1={true}
        >
          <li
            className="level-1"
          >
            <A
              href="https://google.com"
              target="_blank"
            >
              <a
                href="https://google.com"
                onClick={[Function]}
                target="_blank"
              >
                test link
              </a>
            </A>
            <DropDown />
          </li>
        </Li>
      </Route>
    </NavLink>
  </Router>
</MemoryRouter>
`;

exports[`NavLink ATTRIBUTES should work in isStrict mode 1`] = `
<MemoryRouter
  initialEntries={
    Array [
      "/",
    ]
  }
>
  <Router
    history=""
  >
    <NavLink
      href="/test"
      isStrict={true}
    >
      <Route
        location=""
        path="\\\\/test"
        strict={true}
      >
        <Li
          _dropdown={false}
          _level-1={true}
        >
          <li
            className="level-1"
          >
            <NavLink
              to="/test"
            >
              <Link
                aria-current={null}
                to={
                  Object {
                    "hash": "",
                    "pathname": "/test",
                    "search": "",
                    "state": null,
                  }
                }
              >
                <LinkAnchor
                  aria-current={null}
                  href="/test"
                  navigate={[Function]}
                >
                  <a
                    aria-current={null}
                    href="/test"
                    onClick={[Function]}
                  >
                    test link
                     
                    <Icon />
                  </a>
                </LinkAnchor>
              </Link>
            </NavLink>
            <DropDown />
          </li>
        </Li>
      </Route>
    </NavLink>
  </Router>
</MemoryRouter>
`;

exports[`NavLink SNAPSHOTS should render 1`] = `
<MemoryRouter>
  <Router
    history=""
  >
    <NavLink
      href="/test"
    >
      <Route
        location=""
        path="\\\\/test"
      >
        <Li
          _dropdown={false}
          _level-1={true}
        >
          <li
            className="level-1"
          >
            <NavLink
              to="/test"
            >
              <Link
                aria-current={null}
                to={
                  Object {
                    "hash": "",
                    "pathname": "/test",
                    "search": "",
                    "state": null,
                  }
                }
              >
                <LinkAnchor
                  aria-current={null}
                  href="/test"
                  navigate={[Function]}
                >
                  <a
                    aria-current={null}
                    href="/test"
                    onClick={[Function]}
                  >
                    test link
                     
                    <Icon />
                  </a>
                </LinkAnchor>
              </Link>
            </NavLink>
            <DropDown />
          </li>
        </Li>
      </Route>
    </NavLink>
  </Router>
</MemoryRouter>
`;
