// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NumericTextBox SNAPSHOTS controllable mode should render format 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="numeric-text-box-wrapper"
      >
        <div
          class="numeric-text-box-input-wrapper"
        >
          <input
            aria-invalid="false"
            class="numeric-text-box-input"
            inputmode="numeric"
            value="0,24 %"
          />
          <div
            class="numeric-text-box-arrow-buttons"
          >
            <span
              class="numeric-text-box-arrow-up uicon-collapse"
            />
            <span
              class="numeric-text-box-arrow-down uicon-expand"
            />
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="numeric-text-box-wrapper"
    >
      <div
        class="numeric-text-box-input-wrapper"
      >
        <input
          aria-invalid="false"
          class="numeric-text-box-input"
          inputmode="numeric"
          value="0,24 %"
        />
        <div
          class="numeric-text-box-arrow-buttons"
        >
          <span
            class="numeric-text-box-arrow-up uicon-collapse"
          />
          <span
            class="numeric-text-box-arrow-down uicon-expand"
          />
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`NumericTextBox SNAPSHOTS controllable mode should render format 2`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="numeric-text-box-wrapper"
      >
        <div
          class="numeric-text-box-input-wrapper"
        >
          <input
            aria-invalid="false"
            class="numeric-text-box-input"
            inputmode="numeric"
            value="0,2359 ₽"
          />
          <div
            class="numeric-text-box-arrow-buttons"
          >
            <span
              class="numeric-text-box-arrow-up uicon-collapse"
            />
            <span
              class="numeric-text-box-arrow-down uicon-expand"
            />
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="numeric-text-box-wrapper"
    >
      <div
        class="numeric-text-box-input-wrapper"
      >
        <input
          aria-invalid="false"
          class="numeric-text-box-input"
          inputmode="numeric"
          value="0,2359 ₽"
        />
        <div
          class="numeric-text-box-arrow-buttons"
        >
          <span
            class="numeric-text-box-arrow-up uicon-collapse"
          />
          <span
            class="numeric-text-box-arrow-down uicon-expand"
          />
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`NumericTextBox SNAPSHOTS controllable mode should render max 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="numeric-text-box-wrapper"
      >
        <div
          class="numeric-text-box-input-wrapper"
        >
          <input
            aria-invalid="false"
            class="numeric-text-box-input"
            inputmode="numeric"
            value="7,3"
          />
          <div
            class="numeric-text-box-arrow-buttons"
          >
            <span
              class="numeric-text-box-arrow-up uicon-collapse"
            />
            <span
              class="numeric-text-box-arrow-down uicon-expand"
            />
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="numeric-text-box-wrapper"
    >
      <div
        class="numeric-text-box-input-wrapper"
      >
        <input
          aria-invalid="false"
          class="numeric-text-box-input"
          inputmode="numeric"
          value="7,3"
        />
        <div
          class="numeric-text-box-arrow-buttons"
        >
          <span
            class="numeric-text-box-arrow-up uicon-collapse"
          />
          <span
            class="numeric-text-box-arrow-down uicon-expand"
          />
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`NumericTextBox SNAPSHOTS controllable mode should render min 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="numeric-text-box-wrapper"
      >
        <div
          class="numeric-text-box-input-wrapper"
        >
          <input
            aria-invalid="false"
            class="numeric-text-box-input"
            inputmode="numeric"
            value="-2"
          />
          <div
            class="numeric-text-box-arrow-buttons"
          >
            <span
              class="numeric-text-box-arrow-up uicon-collapse"
            />
            <span
              class="numeric-text-box-arrow-down uicon-expand"
            />
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="numeric-text-box-wrapper"
    >
      <div
        class="numeric-text-box-input-wrapper"
      >
        <input
          aria-invalid="false"
          class="numeric-text-box-input"
          inputmode="numeric"
          value="-2"
        />
        <div
          class="numeric-text-box-arrow-buttons"
        >
          <span
            class="numeric-text-box-arrow-up uicon-collapse"
          />
          <span
            class="numeric-text-box-arrow-down uicon-expand"
          />
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`NumericTextBox SNAPSHOTS controllable mode should render min 2`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="numeric-text-box-wrapper"
      >
        <div
          class="numeric-text-box-input-wrapper"
        >
          <input
            aria-invalid="false"
            class="numeric-text-box-input"
            inputmode="numeric"
            value="-6,2"
          />
          <div
            class="numeric-text-box-arrow-buttons"
          >
            <span
              class="numeric-text-box-arrow-up uicon-collapse"
            />
            <span
              class="numeric-text-box-arrow-down uicon-expand"
            />
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="numeric-text-box-wrapper"
    >
      <div
        class="numeric-text-box-input-wrapper"
      >
        <input
          aria-invalid="false"
          class="numeric-text-box-input"
          inputmode="numeric"
          value="-6,2"
        />
        <div
          class="numeric-text-box-arrow-buttons"
        >
          <span
            class="numeric-text-box-arrow-up uicon-collapse"
          />
          <span
            class="numeric-text-box-arrow-down uicon-expand"
          />
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`NumericTextBox SNAPSHOTS controllable mode should render step 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="numeric-text-box-wrapper"
      >
        <div
          class="numeric-text-box-input-wrapper"
        >
          <input
            aria-invalid="false"
            class="numeric-text-box-input"
            inputmode="numeric"
            value="2"
          />
          <div
            class="numeric-text-box-arrow-buttons"
          >
            <span
              class="numeric-text-box-arrow-up uicon-collapse"
            />
            <span
              class="numeric-text-box-arrow-down uicon-expand"
            />
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="numeric-text-box-wrapper"
    >
      <div
        class="numeric-text-box-input-wrapper"
      >
        <input
          aria-invalid="false"
          class="numeric-text-box-input"
          inputmode="numeric"
          value="2"
        />
        <div
          class="numeric-text-box-arrow-buttons"
        >
          <span
            class="numeric-text-box-arrow-up uicon-collapse"
          />
          <span
            class="numeric-text-box-arrow-down uicon-expand"
          />
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`NumericTextBox SNAPSHOTS controllable mode should render step 2`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="numeric-text-box-wrapper"
      >
        <div
          class="numeric-text-box-input-wrapper"
        >
          <input
            aria-invalid="false"
            class="numeric-text-box-input"
            inputmode="numeric"
            value="1,9"
          />
          <div
            class="numeric-text-box-arrow-buttons"
          >
            <span
              class="numeric-text-box-arrow-up uicon-collapse"
            />
            <span
              class="numeric-text-box-arrow-down uicon-expand"
            />
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="numeric-text-box-wrapper"
    >
      <div
        class="numeric-text-box-input-wrapper"
      >
        <input
          aria-invalid="false"
          class="numeric-text-box-input"
          inputmode="numeric"
          value="1,9"
        />
        <div
          class="numeric-text-box-arrow-buttons"
        >
          <span
            class="numeric-text-box-arrow-up uicon-collapse"
          />
          <span
            class="numeric-text-box-arrow-down uicon-expand"
          />
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`NumericTextBox SNAPSHOTS controllable mode should render value 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="numeric-text-box-wrapper"
      >
        <div
          class="numeric-text-box-input-wrapper"
        >
          <input
            aria-invalid="false"
            class="numeric-text-box-input"
            inputmode="numeric"
            value="0,24 %"
          />
          <div
            class="numeric-text-box-arrow-buttons"
          >
            <span
              class="numeric-text-box-arrow-up uicon-collapse"
            />
            <span
              class="numeric-text-box-arrow-down uicon-expand"
            />
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="numeric-text-box-wrapper"
    >
      <div
        class="numeric-text-box-input-wrapper"
      >
        <input
          aria-invalid="false"
          class="numeric-text-box-input"
          inputmode="numeric"
          value="0,24 %"
        />
        <div
          class="numeric-text-box-arrow-buttons"
        >
          <span
            class="numeric-text-box-arrow-up uicon-collapse"
          />
          <span
            class="numeric-text-box-arrow-down uicon-expand"
          />
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`NumericTextBox SNAPSHOTS controllable mode should render value 2`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="numeric-text-box-wrapper"
      >
        <div
          class="numeric-text-box-input-wrapper"
        >
          <input
            aria-invalid="false"
            class="numeric-text-box-input"
            inputmode="numeric"
            value="0,69 %"
          />
          <div
            class="numeric-text-box-arrow-buttons"
          >
            <span
              class="numeric-text-box-arrow-up uicon-collapse"
            />
            <span
              class="numeric-text-box-arrow-down uicon-expand"
            />
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="numeric-text-box-wrapper"
    >
      <div
        class="numeric-text-box-input-wrapper"
      >
        <input
          aria-invalid="false"
          class="numeric-text-box-input"
          inputmode="numeric"
          value="0,69 %"
        />
        <div
          class="numeric-text-box-arrow-buttons"
        >
          <span
            class="numeric-text-box-arrow-up uicon-collapse"
          />
          <span
            class="numeric-text-box-arrow-down uicon-expand"
          />
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`NumericTextBox SNAPSHOTS different component states should render placeholder 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="numeric-text-box-wrapper"
      >
        <div
          class="numeric-text-box-input-wrapper"
        >
          <input
            aria-invalid="false"
            class="numeric-text-box-input"
            inputmode="numeric"
            placeholder="placeholder"
            value=""
          />
          <div
            class="numeric-text-box-arrow-buttons"
          >
            <span
              class="numeric-text-box-arrow-up uicon-collapse"
            />
            <span
              class="numeric-text-box-arrow-down uicon-expand"
            />
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="numeric-text-box-wrapper"
    >
      <div
        class="numeric-text-box-input-wrapper"
      >
        <input
          aria-invalid="false"
          class="numeric-text-box-input"
          inputmode="numeric"
          placeholder="placeholder"
          value=""
        />
        <div
          class="numeric-text-box-arrow-buttons"
        >
          <span
            class="numeric-text-box-arrow-up uicon-collapse"
          />
          <span
            class="numeric-text-box-arrow-down uicon-expand"
          />
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`NumericTextBox SNAPSHOTS should render 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="numeric-text-box-wrapper"
      >
        <div
          class="numeric-text-box-input-wrapper"
        >
          <input
            aria-invalid="false"
            class="numeric-text-box-input"
            inputmode="numeric"
            value=""
          />
          <div
            class="numeric-text-box-arrow-buttons"
          >
            <span
              class="numeric-text-box-arrow-up uicon-collapse"
            />
            <span
              class="numeric-text-box-arrow-down uicon-expand"
            />
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="numeric-text-box-wrapper"
    >
      <div
        class="numeric-text-box-input-wrapper"
      >
        <input
          aria-invalid="false"
          class="numeric-text-box-input"
          inputmode="numeric"
          value=""
        />
        <div
          class="numeric-text-box-arrow-buttons"
        >
          <span
            class="numeric-text-box-arrow-up uicon-collapse"
          />
          <span
            class="numeric-text-box-arrow-down uicon-expand"
          />
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
